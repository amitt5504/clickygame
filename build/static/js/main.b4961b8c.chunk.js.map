{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","App.js","index.js"],"names":["ImageCard","props","onClick","setClicked","id","className","alt","name","src","image","Wrapper","children","Title","Score","correctGuesses","bestScore","clickMessage","App","state","avengers","selectedAvenger","filter","avenger","selected","console","log","i","length","setState","sort","a","b","Math","random","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mmDAiBeA,MAbf,SAAmBC,GACjB,OACA,yBAAKC,QAAS,kBAAMD,EAAME,WAAWF,EAAMG,KAAKC,UAAU,QACzD,yBAAKA,UAAU,iBACd,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAE/B,yBAAKJ,UAAU,WACb,gCAASJ,EAAMM,S,MCJRG,MAJf,SAAiBT,GACf,OAAO,yBAAKI,UAAU,WAAWJ,EAAMU,W,MCG1BC,MAJf,SAAeX,GACb,OAAO,wBAAII,UAAU,SAASJ,EAAMU,W,MCGvBE,MAJf,SAAeZ,GACX,OAAO,yBAAKI,UAAU,SAASJ,EAAMU,W,OCKrCG,G,MAAiB,GACjBC,EAAY,EACZC,EAAe,4GAsHJC,E,2MAjHbC,MAAQ,CACJC,WACAL,iBACAC,YACAC,gB,EAGJb,WAAa,SAAAC,GAGT,IAAMe,EAAW,EAAKD,MAAMC,SAGtBC,EAAkBD,EAASE,QAAO,SAAAC,GAAO,OAAIA,EAAQlB,KAAOA,KAIlE,GAAIgB,EAAgB,GAAGG,SAAS,CAE5BC,QAAQC,IAAK,2BAA6BX,GAC1CU,QAAQC,IAAK,uBAAyBV,GAEtCD,EAAiB,EACjBE,EAAe,mDAEf,IAAK,IAAIU,EAAI,EAAIA,EAAIP,EAASQ,OAASD,IACnCP,EAASO,GAAGH,UAAW,EAG3B,EAAKK,SAAS,CAACZ,iBACf,EAAKY,SAAS,CAAEd,mBAChB,EAAKc,SAAS,CAACT,kBAGZ,GAAIL,EAAiB,GAGxBM,EAAgB,GAAGG,UAAW,EAG9BT,IAGAE,EAAe,iEAEXF,EAAiBC,IACjBA,EAAYD,EACZ,EAAKc,SAAS,CAAEb,eAIpBI,EAASU,MAAK,SAASC,EAAGC,GAAG,MAAO,GAAMC,KAAKC,YAG/C,EAAKL,SAAS,CAAET,aAChB,EAAKS,SAAS,CAACd,mBACf,EAAKc,SAAS,CAACZ,qBACZ,CAEHI,EAAgB,GAAGG,UAAW,EAG9BT,EAAiB,EAEjBE,EAAe,4BACfD,EAAY,GACZ,EAAKa,SAAS,CAAEb,cAEhB,IAAK,IAAIW,EAAI,EAAIA,EAAIP,EAASQ,OAASD,IACnCP,EAASO,GAAGH,UAAW,EAI3BJ,EAASU,MAAK,SAASC,EAAGC,GAAG,MAAO,GAAMC,KAAKC,YAG/C,EAAKL,SAAS,CAAET,aAChB,EAAKS,SAAS,CAACd,mBACf,EAAKc,SAAS,CAACZ,mB,wEAKb,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,wBAAIX,UAAU,WACX6B,KAAKhB,MAAMF,cAEd,8CACkBkB,KAAKhB,MAAMJ,eAC3B,6BAFF,eAGeoB,KAAKhB,MAAMH,YAG5B,kBAAC,EAAD,0BACCmB,KAAKhB,MAAMC,SAASgB,KAAI,SAAAb,GAAO,OAC9B,kBAAC,EAAD,CACEnB,WAAY,EAAKA,WACjBC,GAAIkB,EAAQlB,GACZgC,IAAKd,EAAQlB,GACbG,KAAMe,EAAQf,KACdE,MAAOa,EAAQb,MACfc,SAAUD,EAAQC,mB,GA3GZc,a,MCRlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b4961b8c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\nfunction ImageCard(props) {\n  return (\n  <div onClick={() => props.setClicked(props.id)} className=\"card\">\n\t\t\t<div className=\"img-container\">\n\t\t\t\t<img alt={props.name} src={props.image} />\n\t\t\t</div>\n      <div className=\"content\">\n        <strong>{props.name}</strong> \n      </div>\n\t</div>\n);  \n} \n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n    return <div className=\"score\">{props.children}</div>;\n}\n\nexport default Score;","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport avengers from \"./images.json\";\nimport \"./App.css\";\n\n//Initilize scores and message variables\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage = \"Select your team of Avengers to defeat the Mad Titan Thanos!\" + \"Click on the same one twice and Thanos snaps!\";\n\nclass App extends Component {\n    \n  //Setting this.state.matches to the matches json array\n  state = {\n      avengers,\n      correctGuesses,\n      bestScore,\n      clickMessage\n  };\n\n  setClicked = id => {\n\n      //Make a copy of the state matches array to work with\n      const avengers = this.state.avengers;\n\n      //Filter the array for those that are selected (have been clicked)\n      const selectedAvenger = avengers.filter(avenger => avenger.id === id);\n\n      //Conditionals for game score.\n      //If the matched image's clicked value is already true, end game and reset\n      if (selectedAvenger[0].selected){\n\n          console.log (\"Avengers Team Strength: \" + correctGuesses);\n          console.log (\"Best Team Strength: \" + bestScore);\n\n          correctGuesses = 0;\n          clickMessage = \"The Mad Titan Thanos continues to reign supreme!\"\n\n          for (let i = 0 ; i < avengers.length ; i++){\n              avengers[i].selected = false;\n          }\n\n          this.setState({clickMessage});\n          this.setState({ correctGuesses });\n          this.setState({avengers});\n\n      //Otherwise, if false, increase score and reshuffle images\n      } else if (correctGuesses < 16) {\n\n          //Set its selected value to true\n          selectedAvenger[0].selected = true;\n\n          //Increase score\n          correctGuesses++;\n          \n          //Update message to screen\n          clickMessage = \"You've added a new Avenger to the team! Let's keep this going!\";\n\n          if (correctGuesses > bestScore){\n              bestScore = correctGuesses;\n              this.setState({ bestScore });\n          }\n\n          //Reshuffle images\n          avengers.sort(function(a, b){return 0.5 - Math.random()});\n\n          //Set this.state.matches equal to the new matches array\n          this.setState({ avengers });\n          this.setState({correctGuesses});\n          this.setState({clickMessage});\n      } else {\n          //User has correctly finished the game\n          selectedAvenger[0].selected = true;\n\n          //reset score\n          correctGuesses = 0;\n\n          clickMessage = \"Avengers.....ASSEMBLE!!!!\";\n          bestScore = 12;\n          this.setState({ bestScore });\n          \n          for (let i = 0 ; i < avengers.length ; i++){\n              avengers[i].selected = false;\n          }\n\n          //Reshuffle images\n          avengers.sort(function(a, b){return 0.5 - Math.random()});\n\n          //Set this.state.matches equal to the new matches array\n          this.setState({ avengers });\n          this.setState({correctGuesses});\n          this.setState({clickMessage});\n\n      }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Score>\n          <h3 className=\"message\">\n            {this.state.clickMessage}\n          </h3>\n          <h4>\n            Current Score: {this.state.correctGuesses}\n            <br />\n            Best Score: {this.state.bestScore}\n          </h4>\n        </Score>\n        <Title>Avenge The Fallen</Title>\n        {this.state.avengers.map(avenger => (\n          <ImageCard\n            setClicked={this.setClicked}\n            id={avenger.id}\n            key={avenger.id}\n            name={avenger.name}\n            image={avenger.image}\n            selected={avenger.selected}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}