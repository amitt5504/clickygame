{"ast":null,"code":"var _jsxFileName = \"/Users/aaronjmitchell/Desktop/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Score, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Avenge The Fallen\"), this.state.images.map(image => React.createElement(ImageCard, {\n      id: image.id,\n      key: image.id,\n      name: image.name,\n      image: image.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aaronjmitchell/Desktop/clicky-game/src/App.js"],"names":["React","Component","ImageCard","Wrapper","Title","Score","images","App","state","friends","removeFriend","id","filter","friend","setState","render","map","image","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA;AADM,KAFkB;;AAAA,SAM1BC,YAN0B,GAMXC,EAAE,IAAI;AACnB;AACA,YAAMF,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBG,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACF,EAAP,KAAcA,EAAlD,CAAhB,CAFmB,CAGnB;;AACA,WAAKG,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAXyB;AAAA;;AAa1B;AACAM,EAAAA,MAAM,GAAG;AACP,WAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,EAIG,KAAKP,KAAL,CAAWF,MAAX,CAAkBU,GAAlB,CAAsBC,KAAK,IAC1B,oBAAC,SAAD;AACE,MAAA,EAAE,EAAEA,KAAK,CAACN,EADZ;AAEE,MAAA,GAAG,EAAEM,KAAK,CAACN,EAFb;AAGE,MAAA,IAAI,EAAEM,KAAK,CAACC,IAHd;AAIE,MAAA,KAAK,EAAED,KAAK,CAACA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CAFF;AAgBD;;AA/ByB;;AAkC5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      \n      <Wrapper>\n        <Score></Score>\n        <br />\n        <Title>Avenge The Fallen</Title>\n        {this.state.images.map(image => (\n          <ImageCard\n            id={image.id}\n            key={image.id}\n            name={image.name}\n            image={image.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}