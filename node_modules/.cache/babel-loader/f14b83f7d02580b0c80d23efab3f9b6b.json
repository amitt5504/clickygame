{"ast":null,"code":"var _jsxFileName = \"/Users/aaronjmitchell/Desktop/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport images from \"./images.json\";\nimport \"./App.css\";\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage = \"Select your team of Avengers to defeat the Mad Titan Thanos! Click on the same one twice and you snaps!\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.state.clickMessage), React.createElement(Score, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Avenge The Fallen\"), this.state.images.map(image => React.createElement(ImageCard, {\n      id: image.id,\n      key: image.id,\n      name: image.name,\n      image: image.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aaronjmitchell/Desktop/clicky-game/src/App.js"],"names":["React","Component","ImageCard","Wrapper","Title","Score","images","correctGuesses","bestScore","clickMessage","App","state","render","map","image","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,WAAP;AAEA,IAAIC,cAAc,GAAG,CAArB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,YAAY,GAAG,yGAAnB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BU,KAF0B,GAElB;AACNL,MAAAA;AADM,KAFkB;AAAA;;AAO1B;AACAM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWF,YADd,CADF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,EAOG,KAAKE,KAAL,CAAWL,MAAX,CAAkBO,GAAlB,CAAsBC,KAAK,IAC1B,oBAAC,SAAD;AACE,MAAA,EAAE,EAAEA,KAAK,CAACC,EADZ;AAEE,MAAA,GAAG,EAAED,KAAK,CAACC,EAFb;AAGE,MAAA,IAAI,EAAED,KAAK,CAACE,IAHd;AAIE,MAAA,KAAK,EAAEF,KAAK,CAACA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAPH,CADF;AAkBD;;AA3ByB;;AA8B5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport images from \"./images.json\";\nimport \"./App.css\";\n\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage = \"Select your team of Avengers to defeat the Mad Titan Thanos! Click on the same one twice and you snaps!\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    images\n  };\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <h3 className=\"message\">\n          {this.state.clickMessage}\n        </h3>\n        <Score></Score>\n        <br />\n        <Title>Avenge The Fallen</Title>\n        {this.state.images.map(image => (\n          <ImageCard\n            id={image.id}\n            key={image.id}\n            name={image.name}\n            image={image.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}